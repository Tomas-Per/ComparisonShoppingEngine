[{"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\index.js":"1","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\registerServiceWorker.js":"2","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\App.js":"3","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Filter.js":"4","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Categories.js":"5","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Layout.js":"6","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Counter.js":"7","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\FetchData.js":"8","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\ProductsMenu.js":"9","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\ComparisonTab.js":"10","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Checkbox.js":"11","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Slider.js":"12","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\NavMenu.js":"13","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\ComparisonItem.js":"14","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\GridList.js":"15","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Login.js":"16"},{"size":592,"mtime":1609705122688,"results":"17","hashOfConfig":"18"},{"size":4121,"mtime":1609079966091,"results":"19","hashOfConfig":"18"},{"size":1007,"mtime":1609705118814,"results":"20","hashOfConfig":"18"},{"size":1839,"mtime":1609704744758,"results":"21","hashOfConfig":"18"},{"size":3571,"mtime":1609706249382,"results":"22","hashOfConfig":"18"},{"size":375,"mtime":1609705877781,"results":"23","hashOfConfig":"18"},{"size":744,"mtime":1609079966078,"results":"24","hashOfConfig":"18"},{"size":1525,"mtime":1609079966079,"results":"25","hashOfConfig":"18"},{"size":675,"mtime":1609591905981,"results":"26","hashOfConfig":"18"},{"size":1093,"mtime":1609696076944,"results":"27","hashOfConfig":"18"},{"size":1165,"mtime":1609079966077,"results":"28","hashOfConfig":"18"},{"size":840,"mtime":1609079966087,"results":"29","hashOfConfig":"18"},{"size":1821,"mtime":1609079966086,"results":"30","hashOfConfig":"18"},{"size":9789,"mtime":1609694924107,"results":"31","hashOfConfig":"18"},{"size":16480,"mtime":1609704735556,"results":"32","hashOfConfig":"18"},{"size":2424,"mtime":1609704744770},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vqlzze",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"37"},"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\index.js",[],"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\registerServiceWorker.js",[],["71","72","73"],"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\App.js",["74","75"],"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Filter.js",["76","77"],"﻿import React, { Component } from 'react';\r\nimport './FilterStyle.css';\r\nimport Slider from './Slider'\r\nimport CheckBox from './Checkbox'\r\nimport { Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\nexport default class Filter extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"mySidenav\" class=\"sidenav\">\r\n                <Grid>\r\n                    <h5>Filters</h5>\r\n                </Grid>\r\n                \r\n                <p>Price up to:</p>\r\n                <ul id=\"slider\">\r\n                    <Slider />\r\n                </ul>\r\n                <p>Processor</p>\r\n                <div class=\"checkbox\">\r\n                    <CheckBox id=\"ProcessorInteli3\" name=\"Inteli3\" label=\"Intel i3\" />\r\n                    <CheckBox id=\"ProcessorInteli5\" name=\"Inteli5\" label=\"Intel i5\" />\r\n                    <CheckBox id=\"ProcessorInteli7\" name=\"Inteli7\" label=\"Intel i7\" />\r\n                    <CheckBox id=\"ProcessorAMD3\" name=\"AMD3\" label=\"AMD Ryzen 3\" />\r\n                    <CheckBox id=\"ProcessorAMD5\" name=\"AMD5\" label=\"AMD Ryzen 5\" />\r\n                    <CheckBox id=\"ProcessorAMD7\" name=\"AMD7\" label=\"AMD Ryzen 7\" />\r\n                </div>\r\n                <p>Brand</p>\r\n                <div class=\"checkbox\">\r\n                    <CheckBox id=\"BrandAsus\" name=\"Asus\" label=\"Asus\" />\r\n                    <CheckBox id=\"BrandDell\" name=\"Dell\" label=\"Dell\" />\r\n                    <CheckBox id=\"BrandApple\" name=\"Apple\" label=\"Apple\" />\r\n                    <CheckBox id=\"BrandAcer\" name=\"Acer\" label=\"Acer\" />\r\n                    <CheckBox id=\"BrandLenovo\" name=\"Lenovo\" label=\"Lenovo\" />\r\n                    <CheckBox id=\"BrandHuawei\" name=\"Huawei\" label=\"Huawei\" />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Categories.js",["78"],"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Layout.js",[],"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Counter.js",[],"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\FetchData.js",[],"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\ProductsMenu.js",["79","80"],"﻿import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GridList from './GridList';\r\n\r\n\r\nexport class ProductsMenu extends Component {\r\n    static displayName = ProductsMenu.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { checked: false };\r\n    }\r\n\r\n    render() {\r\n        const { category, page } = this.props.match.params;\r\n        console.log(category);\r\n        console.log(page);\r\n        return (\r\n            <div>\r\n                <GridList category={category} page={page} style={{marginLeft: 'auto', marginRight: 'auto', width: '100%'}}/>\r\n                \r\n            </div>\r\n        );\r\n\r\n    }\r\n}","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\ComparisonTab.js",["81","82","83","84","85"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies, useCookies } from 'react-cookie';\r\nimport './ComparisonTab.css';\r\nimport ComparisonItem from './ComparisonItem';\r\n\r\nexport class ComparisonTab extends Component {\r\n    static displayName = ComparisonTab.name;\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <div className={\"gridComparison\"}>\r\n                  <div className={\"column1\"}>\r\n                      <ComparisonItem item={1} colorColumn={\"rgb(229, 161, 219)\"}/>\r\n   \r\n                </div>\r\n\r\n\r\n                 <div>\r\n                      <svg viewBox=\"0 0 400 250\" />\r\n                      <script src='https://cdnjs.cloudflare.com/ajax/libs/d3/5.9.2/d3.min.js' />\r\n                      <script src='./Chart.js'/>\r\n                </div>\r\n\r\n\r\n                  <div className={\"column2\"}>\r\n                      <ComparisonItem item={2} colorColumn={\"rgb(128, 222, 234)\"}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n     \r\n  }\r\n}\r\n","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Checkbox.js",["86","87"],"﻿import React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './CheckBoxStyle.css'\r\n\r\n\r\n/*export default function CheckboxLabels(labelName) {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n    });\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={<Checkbox className=checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n                label={<label>{`${labelName}`}</label>}\r\n            />\r\n        </FormGroup>\r\n    );\r\n}*/\r\n\r\nfunction CheckBox(props) {\r\n    const styles = {\r\n        fontColor: \"white\" ,\r\n        font: \"Helvetica\"\r\n\r\n    }\r\n    return (\r\n        <FormGroup row >\r\n            <FormControlLabel \r\n                control={<Checkbox name={props.name} id={ props.id}/>}\r\n                label={props.label}\r\n            />\r\n        </FormGroup>\r\n    );\r\n}\r\nexport default CheckBox","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\Slider.js",["88"],"﻿import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 180,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value} + €`;\r\n}\r\n\r\nexport default function ContinuousSlider() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid item xs>\r\n                <Slider\r\n                    defaultValue={2000}\r\n                    getAriaValueText={valuetext}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    min={200}\r\n                    max={4000}\r\n                />\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\NavMenu.js",[],"C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\ComparisonItem.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"﻿import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport RateReviewIcon from '@material-ui/icons/RateReview';\r\nimport VerticalAlignCenterIcon from '@material-ui/icons/VerticalAlignCenter';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport { useHistory } from 'react-router';\r\nimport { useCookies, Cookies } from 'react-cookie';\r\nimport './ComparisonTab.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    gridList: {\r\n        width: '100%',\r\n        float: 'left',\r\n        minHeight: '400px',\r\n        minWidth: '464px',\r\n        overflow: 'hidden',\r\n        transform: 'translateZ(0)',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    photo: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        width: 'auto',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n\r\n}));\r\n\r\nexport default function TitlebarGridList({ item, colorColumn }) {\r\n    const classes = useStyles();  \r\n    const [cookies, setCookie, removeCookie] = useCookies(['']);\r\n    const [tile, setTile] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (item === 1) { setTile(cookies.Item1); }\r\n        else if (item === 2) { setTile(cookies.Item2); }\r\n    }, [])\r\n\r\n    if (tile !== null) {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <div>\r\n                    <GridList cols={1}>\r\n                        <GridListTile key={tile.id}>\r\n                            <img className={classes.photo} src={tile.imageLink} />\r\n                                <GridListTileBar\r\n                                    title={tile.name}\r\n                                    subtitle={tile.price.toLocaleString(\"en-US\", { style: \"currency\", currency: \"EUR\" })}\r\n                                />\r\n                        </GridListTile>\r\n                    </GridList>\r\n                    {SpecsFactory(tile, classes)}\r\n                </div>\r\n                <br />\r\n                <center>\r\n                    <Button variant=\"outlined\" style={{ color: colorColumn, borderColor: colorColumn }} onClick={() => {\r\n                        if (item == 1) { removeCookie('Item1'); }\r\n                        else if (item == 2) { removeCookie('Item2'); }\r\n                        setTile(null);\r\n                    }\r\n                    }>\r\n                        Remove\r\n                    </Button>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        console.log(cookies);\r\n        return null;\r\n    }\r\n}\r\n\r\n/*async function postAPI(item1, item2) {\r\n    // Simple POST request with a JSON body using fetch\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify([item1, item2])\r\n\r\n    };\r\n    const response = await fetch('api/Comparison/ComputerComparison/5/5/5', requestOptions);\r\n    const data = await response.json().then(data => { console.log(data) });\r\n}*/\r\n\r\nfunction SpecsFactory(item, classes) {\r\n    switch (item.itemCategory) {\r\n        case 2:\r\n            return DesktopComputerSpecs(item);\r\n        case 0:\r\n            return LaptopComputerSpecs(item);\r\n        case 1:\r\n            return SmartphoneSpecs(item);\r\n    }\r\n}\r\nfunction DesktopComputerSpecs(tile) {\r\n    return (\r\n        <List>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Manufacturer: \"} />\r\n                <ListItemText primary={(tile.manufacturerName != null) ? tile.manufacturerName : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Processor: \"} />\r\n                <ListItemText primary={(tile.processor != null) ? tile.processor.model : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Graphic card: \"} />\r\n                <ListItemText primary={(tile.graphicsCardName != null) ? tile.graphicsCardName : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Storage: \"} />\r\n                <ListItemText primary={(tile.storageCapacity != 0) ? (tile.storageCapacity + ' GB ') : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"RAM: \"} />\r\n                <ListItemText primary={(tile.ram != 0) ? (tile.ram + ' GB ' + ((tile.raM_type != null) ? ('(' + tile.raM_type + ')') : '')) : 'Not specified'} />\r\n            </ListItem>\r\n         </List>)\r\n}\r\nfunction LaptopComputerSpecs(tile) {\r\n    return (\r\n        <List>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Manufacturer: \"} />\r\n                <ListItemText primary={(tile.manufacturerName != null) ? tile.manufacturerName : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Processor: \"} />\r\n                <ListItemText primary={(tile.processor != null) ? tile.processor.model : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Graphic card: \"} />\r\n                <ListItemText primary={(tile.graphicsCardName != null) ? tile.graphicsCardName : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Storage: \"} />\r\n                <ListItemText primary={(tile.storageCapacity != 0) ? (tile.storageCapacity + ' GB ') : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"RAM: \"} />\r\n                <ListItemText primary={(tile.ram != 0) ? (tile.ram + ' GB ' + ((tile.raM_type != null) ? ('(' + tile.raM_type + ')') : '')) : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Resolution: \"} />\r\n                <ListItemText primary={(tile.resolution != null) ? (tile.resolution) : 'Not specified'} />\r\n            </ListItem>\r\n        </List>)\r\n}\r\nfunction SmartphoneSpecs(tile) {\r\n    return (\r\n        <List>\r\n            <ListItem className={\"infoPanel\"} dense={true}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Manufacturer: \"} />\r\n                <ListItemText primary={(tile.manufacturerName != null) ? tile.manufacturerName : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"} dense={true}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Processor: \"} />\r\n                <ListItemText primary={(tile.processor != null) ? tile.processor : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"} dense={true}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Screen diagonal: \"} />\r\n                <ListItemText primary={(tile.screenDiagonal != null) ? tile.screenDiagonal : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"} dense={true}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Ram: \"} />\r\n                <ListItemText primary={(tile.ram != 0) ? (tile.ram + ' GB ') : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"} dense={true}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Cameras: \"} />\r\n                <ListItemText primary={(tile.backCameras != null) ? (tile.backCameras + ((tile.frontCameras != null) ? (' | ' + tile.frontCameras) : '')) : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"} dense={true}>\r\n                <ListItemText className={\"infoRow\"} primary={\"resolution: \"} />\r\n                <ListItemText primary={(tile.resolution != null) ? (tile.resolution) : 'Not specified'} />\r\n            </ListItem>\r\n            <ListItem className={\"infoPanel\"} dense={true}>\r\n                <ListItemText className={\"infoRow\"} primary={\"Battery storage: \"} />\r\n                <ListItemText primary={(tile.batteryStorage != null) ? ((tile.batteryStorage) + ' mAh') : 'Not specified'} />\r\n            </ListItem>\r\n        </List>)\r\n}\r\n","C:\\Users\\Ugnius\\source\\repos\\ComparisonShoppingEngine\\LibraWebsite\\ClientApp\\src\\components\\GridList.js",["112","113","114","115","116","117","118","119","120","121","122","123"],"﻿import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport RateReviewIcon from '@material-ui/icons/RateReview';\r\nimport VerticalAlignCenterIcon from '@material-ui/icons/VerticalAlignCenter';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport { useHistory } from 'react-router';\r\nimport { useCookies, Cookies } from 'react-cookie';\r\nimport './Styles.css';\r\nimport { Divider } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    demo: {\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    container: {\r\n        height: '50%',\r\n        minHeight: '1px',\r\n        width: '40%',\r\n        float: 'bottom',\r\n        overflow: 'hidden',\r\n    },\r\n    gridList: {\r\n        width: '80%',\r\n        float: 'left',\r\n        minHeight: '400px',\r\n        minWidth: '464px',\r\n        overflow: 'hidden',\r\n        transform: 'translateZ(0)',\r\n    },\r\n    photo: {\r\n        display: 'flex',\r\n        height: '90%',\r\n        width: 'auto',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function TitlebarGridList({ category, page }) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [active, setActive] = useState(null);\r\n    const [items, setItems] = useState([])   \r\n    const [pageItems, setPageItems] = useState([]);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [cookies, setCookie] = useCookies(['Item1']);\r\n \r\n    useEffect(() => {\r\n        let mounted = true;\r\n        FetchAPI(category, page)\r\n            .then(data => {\r\n                if (mounted) {\r\n                    setItems(data);\r\n                    setPageItems(data.slice((page-1)*20, (page)*20));\r\n                }\r\n            })\r\n        console.log(items);\r\n\r\n        return () => mounted = false;\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setSearchInput(e.target.value);\r\n        if (searchInput.length > 0) {\r\n            var searchResult = items.filter((i) => {\r\n                return i.name.toLowerCase().match(searchInput.toLocaleLowerCase());\r\n            })\r\n            setPageItems(searchResult);\r\n        }\r\n        else {\r\n            setPageItems(items.slice((parseInt(page) - 1) * 20, (parseInt(page)) * 20));\r\n        }\r\n    };\r\n  \r\n\r\n    if (pageItems != []) {\r\n\r\n        return (\r\n            <div style={{ width: '100%' }}>\r\n                <center>\r\n                    <input type=\"text\" placeHolder=\"Search...\" onChange={handleChange} value={searchInput} />\r\n                </center>\r\n                <br />\r\n                <br />\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={200} cellWidht={200} className={classes.gridList}>\r\n                    {pageItems.map((tile) => (\r\n                        <GridListTile key={tile.id}>\r\n                            <img className={classes.photo} src={tile.imageLink} />\r\n                                <GridListTileBar className={(active == tile.id) ? \"extract\" : ''}\r\n                                    title={tile.name}\r\n                                    subtitle={tile.price.toLocaleString(\"en-US\", { style: \"currency\", currency: \"EUR\" })}\r\n                                    actionIcon={\r\n                                        <IconButton className={classes.icon} onClick={() => {\r\n                                            if (active === tile.id) {\r\n                                                setActive(null);\r\n                                            } else {\r\n                                                setActive(tile.id);\r\n                                            }\r\n                                        }}>\r\n                                            <ExpandMoreIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                            />\r\n                            {SpecsFactory(category, tile, active, classes)}\r\n                           \r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n                </div>\r\n                <br/><br/><br/>\r\n                <center>\r\n                    <Button className={classes.margin} variant=\"outlined\" color=\"secondary\" onClick={() => { history.push(\"/products/\" + category + \"/1\"); setPageItems(items.slice(0, 20)); }}>\r\n                        1\r\n                    </Button>\r\n                    <Button color=\"secondary\">...</Button>\r\n\r\n                    {(parseInt(page) - 3 > 0) ?\r\n                        <Button className={classes.margin} variant=\"outlined\" color=\"secondary\" onClick={() => { history.push(\"/products/\" + category + \"/\" + (parseInt(page) - 1)); setPageItems(items.slice((parseInt(page) - 2) * 20, (parseInt(page) - 1) * 20)); }}>\r\n                            {parseInt(page) - 3}\r\n                        </Button> : null}\r\n                    {(parseInt(page) - 2 > 0) ?\r\n                        <Button className={classes.margin}  variant=\"outlined\" color=\"secondary\" onClick={() => { history.push(\"/products/\" + category + \"/\" + (parseInt(page) - 1)); setPageItems(items.slice((parseInt(page) - 2) * 20, (parseInt(page) - 1) * 20)); }}>\r\n                            {parseInt(page) - 2}\r\n                        </Button> : null}\r\n                    {(parseInt(page) - 1 !== 0) ?\r\n                        <Button className={classes.margin} variant=\"outlined\" size=\"large\" color=\"secondary\" startIcon={<NavigateBeforeIcon />} onClick={() => { history.push(\"/products/\" + category + \"/\" + (parseInt(page) - 1)); setPageItems(items.slice((parseInt(page) - 2) * 20, (parseInt(page) - 1) * 20)); }}>\r\n                            Previous Page\r\n                        </Button> : null}\r\n\r\n                    <Button color=\"secondary\" size=\"large\">{page}</Button>\r\n\r\n                    {(parseInt(page) + 1 <= items.length / 20 + 1) ?\r\n                        <Button className={classes.margin} variant=\"outlined\" size=\"large\" color=\"secondary\" endIcon={<NavigateNextIcon />} onClick={() => { history.push(\"/products/\" + category + \"/\" + (parseInt(page) + 1)); setPageItems(items.slice((parseInt(page)) * 20, (parseInt(page) + 1) * 20)); }}>\r\n                            Next Page\r\n                         </Button> : null}\r\n                    {(parseInt(page) + 2 <= items.length / 20 + 1) ?\r\n                        <Button className={classes.margin} variant=\"outlined\" color=\"secondary\" onClick={() => { history.push(\"/products/\" + category + \"/\" + (parseInt(page) + 1)); setPageItems(items.slice((parseInt(page)) * 20, (parseInt(page) + 1) * 20)); }}>\r\n                            {parseInt(page) + 2}\r\n                        </Button> : null}\r\n                    {(parseInt(page) + 3 <= items.length / 20 + 1) ?\r\n                        <Button className={classes.margin} variant=\"outlined\" color=\"secondary\" onClick={() => { history.push(\"/products/\" + category + \"/\" + (parseInt(page) + 1)); setPageItems(items.slice((parseInt(page)) * 20, (parseInt(page) + 1) * 20)); }}>\r\n                            {parseInt(page) + 3}\r\n                        </Button> : null}\r\n\r\n                    <Button color=\"secondary\">...</Button>\r\n                    <Button className={classes.margin} variant=\"outlined\" color=\"secondary\" onClick={() => { history.push(\"/products/\" + category + \"/1\"); setPageItems(items.slice(Math.round(items.length / 20))); }}>\r\n                        {Math.round(items.length / 20)}\r\n                    </Button>\r\n                    \r\n                </center>\r\n                <br /><br /><br />\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n\r\n\r\n    function SpecsFactory(category, item, active, classes) {\r\n        switch (category) {\r\n            case \"Desktops\":\r\n                return ComputerSpecs(item, active, classes);\r\n            case \"Laptops\":\r\n                return ComputerSpecs(item, active, classes);\r\n            case \"Smartphones\":\r\n                return SmartphoneSpecs(item, active, classes);\r\n        }\r\n    }\r\n    function ComputerSpecs(tile, active, classes) {\r\n        return (\r\n            <List className={(active == tile.id) ? \"extractInfoPanel\" : 'specs'}>\r\n                <Divider />\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Manufacturer: \"} />\r\n                    <ListItemText primary={(tile.manufacturerName != null) ? tile.manufacturerName : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Processor: \"} />\r\n                    <ListItemText primary={(tile.processor != null) ? tile.processor.model : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Graphic card: \"} />\r\n                    <ListItemText primary={(tile.graphicsCardName != null) ? tile.graphicsCardName : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Storage: \"} />\r\n                    <ListItemText primary={(tile.storageCapacity != 0) ? (tile.storageCapacity + ' GB ') : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"RAM: \"} />\r\n                    <ListItemText primary={(tile.ram != 0) ? (tile.ram + ' GB ' + ((tile.raM_type != null) ? ('(' + tile.raM_type + ')') : '')) : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <IconButton className={classes.icon} style={{ marginLeft: \"auto\", marginRight: \"auto\" }}> <RateReviewIcon /> </IconButton>\r\n                    <IconButton className={classes.icon} style={{ transform: \"rotate(90deg)\", marginLeft: \"auto\", marginRight: \"auto\" }} onClick={() => {\r\n                        if (cookies.Item1 == null) {\r\n                            setCookie('Item1', JSON.stringify(tile), { path: '/' });\r\n                        }\r\n                        else if (cookies.Item2 == null) {\r\n                            setCookie('Item2', JSON.stringify(tile), { path: '/' });\r\n                        }\r\n                    }\r\n                    }> <VerticalAlignCenterIcon /> </IconButton>\r\n                    <IconButton className={classes.icon} style={{ marginLeft: \"auto\", marginRight: \"auto\" }}> <SearchIcon /> </IconButton>\r\n                    <IconButton className={classes.icon} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} > <FavoriteBorderIcon /> </IconButton>\r\n                    <IconButton className={classes.icon} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} onClick={() => { window.open(tile.itemURL, '_blank'); }}> <ShoppingCartIcon /> </IconButton>\r\n                </ListItem>\r\n            </List>)\r\n    }\r\n    function SmartphoneSpecs(tile, active, classes) {\r\n        return (\r\n            <List className={(active == tile.id) ? \"extractInfoPanel\" : 'specs'}>\r\n                <Divider />\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Manufacturer: \"} />\r\n                    <ListItemText primary={(tile.manufacturerName != null) ? tile.manufacturerName : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Processor: \"} />\r\n                    <ListItemText primary={(tile.processor != null) ? tile.processor : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Screen diagonal: \"} />\r\n                    <ListItemText primary={(tile.screenDiagonal != null) ? tile.screenDiagonal : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Ram: \"} />\r\n                    <ListItemText primary={(tile.ram != 0) ? (tile.ram + ' GB ') : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <ListItemText className={\"infoRow\"} primary={\"Cameras: \"} />\r\n                    <ListItemText primary={(tile.backCameras != null) ? (tile.backCameras + ((tile.frontCameras != null) ? (' | ' + tile.frontCameras) : '')) : 'Not specified'} />\r\n                </ListItem>\r\n                <ListItem className={\"infoPanel\"} dense={true}>\r\n                    <IconButton className={classes.icon} style={{ marginLeft: \"auto\", marginRight: \"auto\" }}> <RateReviewIcon /> </IconButton>\r\n                    <IconButton className={classes.icon} style={{ transform: \"rotate(90deg)\", marginLeft: \"auto\", marginRight: \"auto\" }} onClick={() => {\r\n                        if (cookies.Item1 == null) {\r\n                            setCookie('Item1', JSON.stringify(tile), { path: '/' });\r\n                        }\r\n                        else if (cookies.Item2 == null) {\r\n                            setCookie('Item2', JSON.stringify(tile), { path: '/' });\r\n                        }\r\n                    }\r\n                    }> <VerticalAlignCenterIcon /> </IconButton>\r\n                    <IconButton className={classes.icon} style={{ marginLeft: \"auto\", marginRight: \"auto\" }}> <SearchIcon /> </IconButton>\r\n                    <IconButton className={classes.icon} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} > <FavoriteBorderIcon /> </IconButton>\r\n                    <IconButton className={classes.icon} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} onClick={() => { window.open(tile.itemURL, '_blank'); }}> <ShoppingCartIcon /> </IconButton>\r\n                </ListItem>\r\n            </List>)\r\n    }\r\n}\r\n\r\nfunction FetchAPI(category, page) {\r\n    var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n        targetUrl = 'http://78.61.251.110:8080/api/' + category + '/Page/0'\r\n    return fetch(proxyUrl + targetUrl).then(response =>response.json());\r\n}\r\n/*async function postAPI(item1, item2) {\r\n    // Simple POST request with a JSON body using fetch\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify([item1, item2])\r\n\r\n    };\r\n    const response = await fetch('api/Comparison/ComputerComparison/5/5/5', requestOptions);\r\n    const data = await response.json().then(data => { console.log(data) });\r\n}*/\r\n\r\n\r\n//price={tile.price.toLocaleString(\"en-US\", { style: \"currency\", currency: \"EUR\" })}",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":3,"column":17,"nodeType":"132","messageId":"133","endLine":3,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":1,"column":1,"nodeType":"137","messageId":"138","fix":"139"},{"ruleId":"130","severity":1,"message":"140","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":1,"column":1,"nodeType":"137","messageId":"138","fix":"141"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"142","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":20},{"ruleId":"130","severity":1,"message":"143","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":21},{"ruleId":"130","severity":1,"message":"144","line":4,"column":23,"nodeType":"132","messageId":"133","endLine":4,"endColumn":30},{"ruleId":"130","severity":1,"message":"145","line":4,"column":32,"nodeType":"132","messageId":"133","endLine":4,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":1,"column":1,"nodeType":"137","messageId":"138","fix":"146"},{"ruleId":"130","severity":1,"message":"147","line":27,"column":11,"nodeType":"132","messageId":"133","endLine":27,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":1,"column":1,"nodeType":"137","messageId":"138","fix":"148"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":1,"nodeType":"137","messageId":"138","fix":"149"},{"ruleId":"130","severity":1,"message":"150","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":18},{"ruleId":"130","severity":1,"message":"151","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":22},{"ruleId":"130","severity":1,"message":"152","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":22},{"ruleId":"130","severity":1,"message":"153","line":12,"column":8,"nodeType":"132","messageId":"133","endLine":12,"endColumn":31},{"ruleId":"130","severity":1,"message":"154","line":13,"column":8,"nodeType":"132","messageId":"133","endLine":13,"endColumn":26},{"ruleId":"130","severity":1,"message":"155","line":14,"column":8,"nodeType":"132","messageId":"133","endLine":14,"endColumn":18},{"ruleId":"130","severity":1,"message":"156","line":15,"column":8,"nodeType":"132","messageId":"133","endLine":15,"endColumn":24},{"ruleId":"130","severity":1,"message":"157","line":17,"column":8,"nodeType":"132","messageId":"133","endLine":17,"endColumn":24},{"ruleId":"130","severity":1,"message":"158","line":18,"column":8,"nodeType":"132","messageId":"133","endLine":18,"endColumn":26},{"ruleId":"130","severity":1,"message":"159","line":19,"column":10,"nodeType":"132","messageId":"133","endLine":19,"endColumn":20},{"ruleId":"130","severity":1,"message":"144","line":20,"column":22,"nodeType":"132","messageId":"133","endLine":20,"endColumn":29},{"ruleId":"130","severity":1,"message":"160","line":62,"column":21,"nodeType":"132","messageId":"133","endLine":62,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":69,"column":8,"nodeType":"163","endLine":69,"endColumn":10,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":78,"column":29,"nodeType":"167","endLine":78,"endColumn":83},{"ruleId":"168","severity":1,"message":"169","line":90,"column":34,"nodeType":"170","messageId":"138","endLine":90,"endColumn":36},{"ruleId":"168","severity":1,"message":"169","line":91,"column":39,"nodeType":"170","messageId":"138","endLine":91,"endColumn":41},{"ruleId":"171","severity":1,"message":"172","line":120,"column":5,"nodeType":"173","messageId":"174","endLine":127,"endColumn":6},{"ruleId":"168","severity":1,"message":"175","line":146,"column":62,"nodeType":"170","messageId":"138","endLine":146,"endColumn":64},{"ruleId":"168","severity":1,"message":"175","line":150,"column":50,"nodeType":"170","messageId":"138","endLine":150,"endColumn":52},{"ruleId":"168","severity":1,"message":"175","line":171,"column":62,"nodeType":"170","messageId":"138","endLine":171,"endColumn":64},{"ruleId":"168","severity":1,"message":"175","line":175,"column":50,"nodeType":"170","messageId":"138","endLine":175,"endColumn":52},{"ruleId":"168","severity":1,"message":"175","line":200,"column":50,"nodeType":"170","messageId":"138","endLine":200,"endColumn":52},{"ruleId":"135","severity":1,"message":"136","line":1,"column":1,"nodeType":"137","messageId":"138","fix":"176"},{"ruleId":"130","severity":1,"message":"144","line":20,"column":22,"nodeType":"132","messageId":"133","endLine":20,"endColumn":29},{"ruleId":"161","severity":1,"message":"177","line":108,"column":8,"nodeType":"163","endLine":108,"endColumn":10,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"175","line":125,"column":19,"nodeType":"170","messageId":"138","endLine":125,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":138,"column":29,"nodeType":"167","endLine":138,"endColumn":83},{"ruleId":"168","severity":1,"message":"169","line":139,"column":69,"nodeType":"170","messageId":"138","endLine":139,"endColumn":71},{"ruleId":"171","severity":1,"message":"172","line":211,"column":9,"nodeType":"173","messageId":"174","endLine":218,"endColumn":10},{"ruleId":"168","severity":1,"message":"169","line":222,"column":38,"nodeType":"170","messageId":"138","endLine":222,"endColumn":40},{"ruleId":"168","severity":1,"message":"175","line":238,"column":66,"nodeType":"170","messageId":"138","endLine":238,"endColumn":68},{"ruleId":"168","severity":1,"message":"175","line":242,"column":54,"nodeType":"170","messageId":"138","endLine":242,"endColumn":56},{"ruleId":"168","severity":1,"message":"169","line":263,"column":38,"nodeType":"170","messageId":"138","endLine":263,"endColumn":40},{"ruleId":"168","severity":1,"message":"175","line":279,"column":54,"nodeType":"170","messageId":"138","endLine":279,"endColumn":56},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"181","text":"182"},"'Checkbox' is defined but never used.",{"range":"183","text":"182"},"'instanceOf' is defined but never used.","'withCookies' is defined but never used.","'Cookies' is defined but never used.","'useCookies' is defined but never used.",{"range":"184","text":"182"},"'styles' is assigned a value but never used.",{"range":"185","text":"182"},{"range":"186","text":"182"},"'IconButton' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'RateReviewIcon' is defined but never used.","'VerticalAlignCenterIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'SearchIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'NavigateNextIcon' is defined but never used.","'NavigateBeforeIcon' is defined but never used.","'useHistory' is defined but never used.","'setCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.Item1', 'cookies.Item2', and 'item'. Either include them or remove the dependency array.","ArrayExpression",["187"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.",{"range":"188","text":"182"},"React Hook useEffect has missing dependencies: 'category', 'items', and 'page'. Either include them or remove the dependency array. If 'setPageItems' needs the current value of 'page', you can also switch to useReducer instead of useState and read 'page' in the reducer.",["189"],"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],{"desc":"190","fix":"191"},[-1,0],{"desc":"192","fix":"193"},"Update the dependencies array to be: [cookies.Item1, cookies.Item2, item]",{"range":"194","text":"195"},"Update the dependencies array to be: [category, items, page]",{"range":"196","text":"197"},[2417,2419],"[cookies.Item1, cookies.Item2, item]",[3337,3339],"[category, items, page]"]