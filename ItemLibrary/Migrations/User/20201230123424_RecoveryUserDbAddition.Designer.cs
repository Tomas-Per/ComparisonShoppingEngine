// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelLibrary.DataContexts;

namespace ModelLibrary.Migrations.User
{
    [DbContext(typeof(UserContext))]
    [Migration("20201230123424_RecoveryUserDbAddition")]
    partial class RecoveryUserDbAddition
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ModelLibrary.FavoriteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ItemCategory")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ItemId", "ItemCategory");

                    b.ToTable("FavoriteItems");
                });

            modelBuilder.Entity("ModelLibrary.Item", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCategory")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLink")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ItemCode")
                        .HasColumnType("int");

                    b.Property<string>("ItemURL")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ManufacturerName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShopName")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id", "ItemCategory");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").IsComplete(false).HasValue("Item");
                });

            modelBuilder.Entity("ModelLibrary.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ItemCategory")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(280)
                        .HasColumnType("nvarchar(280)");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ItemId", "ItemCategory");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ModelLibrary.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("RecoveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecoveryPassword")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ModelLibrary.Computer", b =>
                {
                    b.HasBaseType("ModelLibrary.Item");

                    b.ToTable("Items");

                    b.HasDiscriminator().HasValue("Computer");
                });

            modelBuilder.Entity("ModelLibrary.Smartphone", b =>
                {
                    b.HasBaseType("ModelLibrary.Item");

                    b.ToTable("Items");

                    b.HasDiscriminator().HasValue("Smartphone");
                });

            modelBuilder.Entity("ModelLibrary.FavoriteItem", b =>
                {
                    b.HasOne("ModelLibrary.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("ModelLibrary.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId", "ItemCategory");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLibrary.Review", b =>
                {
                    b.HasOne("ModelLibrary.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("ModelLibrary.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId", "ItemCategory");

                    b.Navigation("Item");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
